// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MissionApp.Entities.Data;

#nullable disable

namespace MissionApp.Entities.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MissionApp.Entities.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Admin_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("First_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("Last_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.HasKey("AdminId")
                        .HasName("PK__Admin__4A3006F77E4A9AE8");

                    b.HasIndex(new[] { "Email" }, "UQ__Admin__A9D10534F21D2807")
                        .IsUnique();

                    b.ToTable("Admin", (string)null);
                });

            modelBuilder.Entity("MissionApp.Entities.Models.Banner", b =>
                {
                    b.Property<int>("BannerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Banner_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BannerId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(512)
                        .IsUnicode(false)
                        .HasColumnType("varchar(512)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int")
                        .HasColumnName("Sort_Order");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.HasKey("BannerId")
                        .HasName("PK__Banner__8177AC045ED82096");

                    b.ToTable("Banner", (string)null);
                });

            modelBuilder.Entity("MissionApp.Entities.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("City_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("Country_Id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.HasKey("CityId")
                        .HasName("PK__City__DE9DE00066A0CF4C");

                    b.HasIndex("CountryId");

                    b.ToTable("City", (string)null);
                });

            modelBuilder.Entity("MissionApp.Entities.Models.CmsPage", b =>
                {
                    b.Property<int>("CmsPageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CMS_Page_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CmsPageId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Status")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.HasKey("CmsPageId")
                        .HasName("PK__CMS_Page__DFA80DBFE4622A4E");

                    b.ToTable("CMS_Page", (string)null);
                });

            modelBuilder.Entity("MissionApp.Entities.Models.Comment", b =>
                {
                    b.Property<string>("ApprovalStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Approval_Status")
                        .HasDefaultValueSql("('PENDING')");

                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Comment_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"));

                    b.Property<string>("CommentText")
                        .HasColumnType("text")
                        .HasColumnName("CommentText");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<int>("MissionId")
                        .HasColumnType("int")
                        .HasColumnName("Mission_Id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasIndex("MissionId");

                    b.HasIndex("UserId");

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("MissionApp.Entities.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Country_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<string>("Iso")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("ISO");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.HasKey("CountryId")
                        .HasName("PK__Country__8036CBAEE3221086");

                    b.ToTable("Country", (string)null);
                });

            modelBuilder.Entity("MissionApp.Entities.Models.FavouriteMission", b =>
                {
                    b.Property<int>("FavouriteMissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Favourite_Mission_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavouriteMissionId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<int>("MissionId")
                        .HasColumnType("int")
                        .HasColumnName("Mission_Id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("FavouriteMissionId")
                        .HasName("PK__Favourit__4AA4FEF153ECF314");

                    b.HasIndex("MissionId");

                    b.HasIndex("UserId");

                    b.ToTable("Favourite_Mission", (string)null);
                });

            modelBuilder.Entity("MissionApp.Entities.Models.GoalMission", b =>
                {
                    b.Property<int>("GoalMissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Goal_Mission_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GoalMissionId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<string>("GoalObjectiveText")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Goal_Objective_Text");

                    b.Property<int?>("GoalValue")
                        .HasColumnType("int")
                        .HasColumnName("Goal_Value");

                    b.Property<int>("MissionId")
                        .HasColumnType("int")
                        .HasColumnName("Mission_Id");

                    b.Property<int?>("TotalValue")
                        .HasColumnType("int")
                        .HasColumnName("Total_Value");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.HasKey("GoalMissionId")
                        .HasName("PK__Goal_Mis__3552730192618691");

                    b.HasIndex("MissionId");

                    b.ToTable("Goal_Mission", (string)null);
                });

            modelBuilder.Entity("MissionApp.Entities.Models.Mission", b =>
                {
                    b.Property<int>("MissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Mission_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MissionId"));

                    b.Property<int>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("City_Id");

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("Country_Id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("End_Date");

                    b.Property<string>("MissionAvailability")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("Mission_Availability");

                    b.Property<int?>("MissionStatus")
                        .HasColumnType("int")
                        .HasColumnName("Mission_Status");

                    b.Property<int>("MissionThemeId")
                        .HasColumnType("int")
                        .HasColumnName("Mission_Theme_Id");

                    b.Property<string>("MissionType")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("Mission_Type");

                    b.Property<string>("OrganizationDetail")
                        .HasColumnType("text")
                        .HasColumnName("Organization_Detail");

                    b.Property<string>("OrganizationName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Organization_Name");

                    b.Property<int?>("Seats")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("text")
                        .HasColumnName("Short_Description");

                    b.Property<DateTime?>("StartDate")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Start_Date");

                    b.Property<string>("Title")
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.HasKey("MissionId")
                        .HasName("PK__Mission__93DB38B2459BD983");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("MissionThemeId");

                    b.ToTable("Mission", (string)null);
                });

            modelBuilder.Entity("MissionApp.Entities.Models.MissionApplication", b =>
                {
                    b.Property<int>("MissionApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Mission_Application_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MissionApplicationId"));

                    b.Property<DateTime?>("AppliedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("Applied_at");

                    b.Property<string>("ApprovalStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("Approval_status")
                        .HasDefaultValueSql("('PENDING')");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<int>("MissionId")
                        .HasColumnType("int")
                        .HasColumnName("Mission_Id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("MissionApplicationId")
                        .HasName("PK__Mission___4D66C19C23FA5BA7");

                    b.HasIndex("MissionId");

                    b.HasIndex("UserId");

                    b.ToTable("Mission_Application", (string)null);
                });

            modelBuilder.Entity("MissionApp.Entities.Models.MissionDocument", b =>
                {
                    b.Property<int>("MissionDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Mission_Document_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MissionDocumentId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<string>("DocumentName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Document_Name");

                    b.Property<string>("DocumentPath")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Document_Path");

                    b.Property<string>("DocumentType")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Document_Type");

                    b.Property<int>("MissionId")
                        .HasColumnType("int")
                        .HasColumnName("Mission_Id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.HasKey("MissionDocumentId")
                        .HasName("PK__Mission___5E814220AD242323");

                    b.HasIndex("MissionId");

                    b.ToTable("Mission_Document", (string)null);
                });

            modelBuilder.Entity("MissionApp.Entities.Models.MissionInvite", b =>
                {
                    b.Property<int>("MissionInviteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Mission_Invite_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MissionInviteId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<int>("FromUserId")
                        .HasColumnType("int")
                        .HasColumnName("From_User_Id");

                    b.Property<int>("MissionId")
                        .HasColumnType("int")
                        .HasColumnName("Mission_Id");

                    b.Property<int>("ToUserId")
                        .HasColumnType("int")
                        .HasColumnName("To_User_Id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.HasKey("MissionInviteId")
                        .HasName("PK__Mission___F42BB8D10A77BB0D");

                    b.HasIndex("FromUserId");

                    b.HasIndex("MissionId");

                    b.HasIndex("ToUserId");

                    b.ToTable("Mission_Invite", (string)null);
                });

            modelBuilder.Entity("MissionApp.Entities.Models.MissionMedium", b =>
                {
                    b.Property<int>("MissionMediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Mission_Media_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MissionMediaId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<bool>("Defaults")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<string>("MediaName")
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("Media_Name");

                    b.Property<string>("MediaPath")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Media_Path");

                    b.Property<string>("MediaType")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("Media_Type");

                    b.Property<int>("MissionId")
                        .HasColumnType("int")
                        .HasColumnName("Mission_Id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.HasKey("MissionMediaId")
                        .HasName("PK__Mission___395AE427BABC1C7A");

                    b.HasIndex("MissionId");

                    b.ToTable("Mission_Media", (string)null);
                });

            modelBuilder.Entity("MissionApp.Entities.Models.MissionRating", b =>
                {
                    b.Property<int>("MissionRatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Mission_Rating_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MissionRatingId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<int>("MissionId")
                        .HasColumnType("int")
                        .HasColumnName("Mission_Id");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("MissionRatingId")
                        .HasName("PK__Mission___193BE1C1E8D32B96");

                    b.HasIndex("MissionId");

                    b.HasIndex("UserId");

                    b.ToTable("Mission_Rating", (string)null);
                });

            modelBuilder.Entity("MissionApp.Entities.Models.MissionSkill", b =>
                {
                    b.Property<int>("MissionSkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Mission_Skill_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MissionSkillId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<int>("MissionId")
                        .HasColumnType("int")
                        .HasColumnName("Mission_Id");

                    b.Property<int>("SkillId")
                        .HasColumnType("int")
                        .HasColumnName("Skill_Id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.HasKey("MissionSkillId")
                        .HasName("PK__Mission___CF5C1E4BF4CF7B6F");

                    b.HasIndex("MissionId");

                    b.HasIndex("SkillId");

                    b.ToTable("Mission_Skill", (string)null);
                });

            modelBuilder.Entity("MissionApp.Entities.Models.MissionTheme", b =>
                {
                    b.Property<int>("MissionThemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Mission_Theme_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MissionThemeId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.HasKey("MissionThemeId")
                        .HasName("PK__MissionT__57A3193BA16A0B2C");

                    b.ToTable("MissionTheme", (string)null);
                });

            modelBuilder.Entity("MissionApp.Entities.Models.PasswordReset", b =>
                {
                    b.Property<string>("Token")
                        .HasMaxLength(191)
                        .IsUnicode(false)
                        .HasColumnType("varchar(191)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(191)
                        .IsUnicode(false)
                        .HasColumnType("varchar(191)");

                    b.HasKey("Token");

                    b.HasIndex(new[] { "Email" }, "UQ__Password__A9D105342970B8B6")
                        .IsUnique();

                    b.ToTable("Password_Reset", (string)null);
                });

            modelBuilder.Entity("MissionApp.Entities.Models.Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Skill_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .IsUnicode(false)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("Skill_Name");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.HasKey("SkillId")
                        .HasName("PK__Skills__B4A9E2900BCF252A");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.Story", b =>
                {
                    b.Property<int>("StoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Story_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoryId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("MissionId")
                        .HasColumnType("int")
                        .HasColumnName("Mission_Id");

                    b.Property<DateTime?>("PublishedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Published_at");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasDefaultValueSql("('DRAFT')");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("StoryId")
                        .HasName("PK__Story__C43D7E4848274C7B");

                    b.HasIndex("MissionId");

                    b.HasIndex("UserId");

                    b.ToTable("Story", (string)null);
                });

            modelBuilder.Entity("MissionApp.Entities.Models.StoryInvite", b =>
                {
                    b.Property<int>("StoryInviteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Story_Invite_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoryInviteId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<int>("FromUserId")
                        .HasColumnType("int")
                        .HasColumnName("From_User_Id");

                    b.Property<int>("StoryId")
                        .HasColumnType("int")
                        .HasColumnName("Story_Id");

                    b.Property<int>("ToUserId")
                        .HasColumnType("int")
                        .HasColumnName("To_User_Id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.HasKey("StoryInviteId")
                        .HasName("PK__Stoty_In__BE13AAD2013A9686");

                    b.HasIndex("FromUserId");

                    b.HasIndex("StoryId");

                    b.HasIndex("ToUserId");

                    b.ToTable("Stoty_Invite", (string)null);
                });

            modelBuilder.Entity("MissionApp.Entities.Models.StoryMedium", b =>
                {
                    b.Property<int>("StoryMediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Story_Media_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoryMediaId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<string>("Path")
                        .HasColumnType("text");

                    b.Property<int>("StoryId")
                        .HasColumnType("int")
                        .HasColumnName("Story_Id");

                    b.Property<string>("Type")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.HasKey("StoryMediaId")
                        .HasName("PK__Story_Me__E32A7337EE2B68B2");

                    b.HasIndex("StoryId");

                    b.ToTable("Story_Media", (string)null);
                });

            modelBuilder.Entity("MissionApp.Entities.Models.Timesheet", b =>
                {
                    b.Property<int>("TimesheetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Timesheet_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimesheetId"));

                    b.Property<int?>("Action")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("DateVolunteered")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Date_Volunteered");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<int>("MissionId")
                        .HasColumnType("int")
                        .HasColumnName("Mission_Id");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasDefaultValueSql("('PENDING')");

                    b.Property<int?>("Time")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("TimesheetId")
                        .HasName("PK__Timeshee__9E523410DAC1AB4E");

                    b.HasIndex("MissionId");

                    b.HasIndex("UserId");

                    b.ToTable("Timesheet", (string)null);
                });

            modelBuilder.Entity("MissionApp.Entities.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Avatar")
                        .HasMaxLength(2048)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2048)");

                    b.Property<int>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("City_Id");

                    b.Property<int>("CountryId")
                        .HasColumnType("int")
                        .HasColumnName("Country_Id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<string>("Department")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("EmployeeId")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("Employee_Id");

                    b.Property<string>("FirstName")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("First_name");

                    b.Property<string>("LastName")
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("Last_name");

                    b.Property<string>("LinkedInUrl")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Linked_In_Url");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("Phone_number");

                    b.Property<string>("ProfileText")
                        .HasColumnType("text")
                        .HasColumnName("Profile_Text");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.Property<string>("WhyIVolunteer")
                        .HasColumnType("text")
                        .HasColumnName("Why_I_Volunteer");

                    b.HasKey("UserId")
                        .HasName("PK__Users__206D9170C03B056A");

                    b.HasIndex("CityId");

                    b.HasIndex("CountryId");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534C476786E")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.UserSkill", b =>
                {
                    b.Property<int>("UserSkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("User_Skill_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserSkillId"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("DeletedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Deleted_at");

                    b.Property<int>("SkillId")
                        .HasColumnType("int")
                        .HasColumnName("Skill_Id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("Updated_at");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("UserSkillId")
                        .HasName("PK__User_Ski__5EEE510684E015C3");

                    b.HasIndex("SkillId");

                    b.HasIndex("UserId");

                    b.ToTable("User_Skill", (string)null);
                });

            modelBuilder.Entity("MissionApp.Entities.Models.City", b =>
                {
                    b.HasOne("MissionApp.Entities.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK__City__Country_Id__4222D4EF");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.Comment", b =>
                {
                    b.HasOne("MissionApp.Entities.Models.Mission", "Mission")
                        .WithMany()
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__Comment__Mission__5629CD9C");

                    b.HasOne("MissionApp.Entities.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Comment__User_Id__5535A963");

                    b.Navigation("Mission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.FavouriteMission", b =>
                {
                    b.HasOne("MissionApp.Entities.Models.Mission", "Mission")
                        .WithMany("FavouriteMissions")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__Favourite__Missi__5EBF139D");

                    b.HasOne("MissionApp.Entities.Models.User", "User")
                        .WithMany("FavouriteMissions")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Favourite__User___5DCAEF64");

                    b.Navigation("Mission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.GoalMission", b =>
                {
                    b.HasOne("MissionApp.Entities.Models.Mission", "Mission")
                        .WithMany("GoalMissions")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__Goal_Miss__Missi__628FA481");

                    b.Navigation("Mission");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.Mission", b =>
                {
                    b.HasOne("MissionApp.Entities.Models.City", "City")
                        .WithMany("Missions")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("FK__Mission__City_Id__5165187F");

                    b.HasOne("MissionApp.Entities.Models.Country", "Country")
                        .WithMany("Missions")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK__Mission__Country__52593CB8");

                    b.HasOne("MissionApp.Entities.Models.MissionTheme", "MissionTheme")
                        .WithMany("Missions")
                        .HasForeignKey("MissionThemeId")
                        .IsRequired()
                        .HasConstraintName("FK__Mission__Mission__5070F446");

                    b.Navigation("City");

                    b.Navigation("Country");

                    b.Navigation("MissionTheme");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.MissionApplication", b =>
                {
                    b.HasOne("MissionApp.Entities.Models.Mission", "Mission")
                        .WithMany("MissionApplications")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__Mission_A__Missi__66603565");

                    b.HasOne("MissionApp.Entities.Models.User", "User")
                        .WithMany("MissionApplications")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Mission_A__User___6754599E");

                    b.Navigation("Mission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.MissionDocument", b =>
                {
                    b.HasOne("MissionApp.Entities.Models.Mission", "Mission")
                        .WithMany("MissionDocuments")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__Mission_D__Missi__6C190EBB");

                    b.Navigation("Mission");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.MissionInvite", b =>
                {
                    b.HasOne("MissionApp.Entities.Models.User", "FromUser")
                        .WithMany("MissionInviteFromUsers")
                        .HasForeignKey("FromUserId")
                        .IsRequired()
                        .HasConstraintName("FK__Mission_I__From___70DDC3D8");

                    b.HasOne("MissionApp.Entities.Models.Mission", "Mission")
                        .WithMany("MissionInvites")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__Mission_I__Missi__6FE99F9F");

                    b.HasOne("MissionApp.Entities.Models.User", "ToUser")
                        .WithMany("MissionInviteToUsers")
                        .HasForeignKey("ToUserId")
                        .IsRequired()
                        .HasConstraintName("FK__Mission_I__To_Us__71D1E811");

                    b.Navigation("FromUser");

                    b.Navigation("Mission");

                    b.Navigation("ToUser");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.MissionMedium", b =>
                {
                    b.HasOne("MissionApp.Entities.Models.Mission", "Mission")
                        .WithMany("MissionMedia")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__Mission_M__Missi__75A278F5");

                    b.Navigation("Mission");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.MissionRating", b =>
                {
                    b.HasOne("MissionApp.Entities.Models.Mission", "Mission")
                        .WithMany("MissionRatings")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__Mission_R__Missi__7B5B524B");

                    b.HasOne("MissionApp.Entities.Models.User", "User")
                        .WithMany("MissionRatings")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Mission_R__User___7A672E12");

                    b.Navigation("Mission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.MissionSkill", b =>
                {
                    b.HasOne("MissionApp.Entities.Models.Mission", "Mission")
                        .WithMany("MissionSkills")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__Mission_S__Missi__04E4BC85");

                    b.HasOne("MissionApp.Entities.Models.Skill", "Skill")
                        .WithMany("MissionSkills")
                        .HasForeignKey("SkillId")
                        .IsRequired()
                        .HasConstraintName("FK__Mission_S__Skill__03F0984C");

                    b.Navigation("Mission");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.Story", b =>
                {
                    b.HasOne("MissionApp.Entities.Models.Mission", "Mission")
                        .WithMany("Stories")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__Story__Mission_I__0D7A0286");

                    b.HasOne("MissionApp.Entities.Models.User", "User")
                        .WithMany("Stories")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Story__User_Id__0C85DE4D");

                    b.Navigation("Mission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.StoryInvite", b =>
                {
                    b.HasOne("MissionApp.Entities.Models.User", "FromUser")
                        .WithMany("StoryInviteFromUsers")
                        .HasForeignKey("FromUserId")
                        .IsRequired()
                        .HasConstraintName("FK__Stoty_Inv__From___1332DBDC");

                    b.HasOne("MissionApp.Entities.Models.Story", "Story")
                        .WithMany("StoryInvites")
                        .HasForeignKey("StoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Stoty_Inv__Story__123EB7A3");

                    b.HasOne("MissionApp.Entities.Models.User", "ToUser")
                        .WithMany("StoryInviteToUsers")
                        .HasForeignKey("ToUserId")
                        .IsRequired()
                        .HasConstraintName("FK__Stoty_Inv__To_Us__14270015");

                    b.Navigation("FromUser");

                    b.Navigation("Story");

                    b.Navigation("ToUser");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.StoryMedium", b =>
                {
                    b.HasOne("MissionApp.Entities.Models.Story", "Story")
                        .WithMany("StoryMedia")
                        .HasForeignKey("StoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Story_Med__Story__17F790F9");

                    b.Navigation("Story");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.Timesheet", b =>
                {
                    b.HasOne("MissionApp.Entities.Models.Mission", "Mission")
                        .WithMany("Timesheets")
                        .HasForeignKey("MissionId")
                        .IsRequired()
                        .HasConstraintName("FK__Timesheet__Missi__1CBC4616");

                    b.HasOne("MissionApp.Entities.Models.User", "User")
                        .WithMany("Timesheets")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Timesheet__User___1BC821DD");

                    b.Navigation("Mission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.User", b =>
                {
                    b.HasOne("MissionApp.Entities.Models.City", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Users__City_Id__46E78A0C");

                    b.HasOne("MissionApp.Entities.Models.Country", "Country")
                        .WithMany("Users")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Users__Country_I__47DBAE45");

                    b.Navigation("City");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.UserSkill", b =>
                {
                    b.HasOne("MissionApp.Entities.Models.Skill", "Skill")
                        .WithMany("UserSkills")
                        .HasForeignKey("SkillId")
                        .IsRequired()
                        .HasConstraintName("FK__User_Skil__Skill__22751F6C");

                    b.HasOne("MissionApp.Entities.Models.User", "User")
                        .WithMany("UserSkills")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__User_Skil__User___2180FB33");

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.City", b =>
                {
                    b.Navigation("Missions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("Missions");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.Mission", b =>
                {
                    b.Navigation("FavouriteMissions");

                    b.Navigation("GoalMissions");

                    b.Navigation("MissionApplications");

                    b.Navigation("MissionDocuments");

                    b.Navigation("MissionInvites");

                    b.Navigation("MissionMedia");

                    b.Navigation("MissionRatings");

                    b.Navigation("MissionSkills");

                    b.Navigation("Stories");

                    b.Navigation("Timesheets");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.MissionTheme", b =>
                {
                    b.Navigation("Missions");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.Skill", b =>
                {
                    b.Navigation("MissionSkills");

                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.Story", b =>
                {
                    b.Navigation("StoryInvites");

                    b.Navigation("StoryMedia");
                });

            modelBuilder.Entity("MissionApp.Entities.Models.User", b =>
                {
                    b.Navigation("FavouriteMissions");

                    b.Navigation("MissionApplications");

                    b.Navigation("MissionInviteFromUsers");

                    b.Navigation("MissionInviteToUsers");

                    b.Navigation("MissionRatings");

                    b.Navigation("Stories");

                    b.Navigation("StoryInviteFromUsers");

                    b.Navigation("StoryInviteToUsers");

                    b.Navigation("Timesheets");

                    b.Navigation("UserSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
